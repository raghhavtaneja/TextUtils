{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Math","floor","Alert","alert","word","string","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NAIe,SAASA,EAAOC,GAC3B,OACA,sBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,UACI,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,SACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,2BAUR,sBAAKF,UAAS,2CAAmD,UAAbD,EAAME,KAAe,OAAO,SAAhF,UACQ,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWI,KAAK,SAASH,GAAG,2BAChG,uBAAOL,UAAU,mBAAmBS,QAAQ,yBAA5C,6BCzBD,SAASC,EAASX,GAE7B,IAoBA,EAAwBY,mBAAS,mBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACA,sBAAKb,UAAU,aAAac,MAAO,CAACC,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,SAAtE,UACI,6BAAKF,EAAMiB,UACX,qBAAKhB,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAec,MAAO,CAACG,gBAA8B,UAAblB,EAAME,KAAe,QAAQ,QAAQc,MAAmB,UAAbhB,EAAME,KAAe,QAAQ,SAAUiB,MAAON,EAAMO,SAXhJ,SAACC,GAEpBP,EAAQO,EAAMC,OAAOH,QASwKb,GAAG,QAAQiB,KAAK,QAGzM,wBAAQlB,KAAK,SAASJ,UAAU,uBAAuBM,QA9BzC,WAElB,IAAIiB,EAAUX,EAAKY,cACnBX,EAAQU,GACRxB,EAAM0B,UAAU,0BAA0B,YA0BtC,kCACA,wBAAQrB,KAAK,SAASJ,UAAU,uBAAuBM,QAzBxC,WACnB,IAAIiB,EAAUX,EAAKc,cACnBb,EAAQU,GACRxB,EAAM0B,UAAU,0BAA0B,YAsBtC,kCACA,wBAAQrB,KAAK,SAASJ,UAAU,sBAAsBM,QArBrC,WAErBO,EADc,IAEdd,EAAM0B,UAAU,gBAAgB,WAkB5B,sBAEJ,sBAAKzB,UAAU,iBAAiBc,MAAO,CAACC,MAAmB,SAAbhB,EAAME,KAAc,QAAQ,SAA1E,UACI,mDACA,iDAA2B,KAAPW,EAAU,EAAEA,EAAKe,MAAM,KAAKC,OAAhD,oBAAyEhB,EAAKgB,UAC9E,8BAAIC,KAAKC,MAAM,KAAQlB,EAAKe,MAAM,KAAKC,OAAS,GAAhD,mBACA,wCACA,4BAAIhB,UCzCD,SAASmB,EAAMhC,GAM1B,OACIA,EAAMiC,OAAS,qBAAKhC,UAAS,sBAAiBD,EAAMiC,MAAM5B,KAA7B,sCAAuEI,KAAK,QAA1F,SACX,8BAAG,iCANQ,SAACyB,GAChB,IAAIC,EAASD,EACb,OAAOC,EAAOC,OAAO,GAAGX,cAAgBU,EAAOE,MAAM,GAIrCC,CAAWtC,EAAMiC,MAAM5B,QAAnC,MAAsDL,EAAMiC,MAAMM,SF4B9ExC,EAAOyC,aAAe,CAClBpC,MAAO,YACPqC,UAAW,aGkBAC,MA9Cf,WAEE,MAAwB9B,mBAAS,SAAjC,mBAAOV,EAAP,KAAayC,EAAb,KACA,EAA0B/B,mBAAS,MAAnC,mBAAOqB,EAAP,KAAcW,EAAd,KAEMlB,EAAY,SAACmB,EAAQxC,GACzBuC,EAAS,CACPL,IAAIM,EACJxC,KAAKA,IAEPyC,YAAW,WACTF,EAAS,QACT,OAGEpC,EAAa,WACP,UAAPN,GACDyC,EAAQ,QACRI,SAASC,KAAKjC,MAAMG,gBAAgB,UACpCQ,EAAU,8BAA8B,aAGxCiB,EAAQ,SACRI,SAASC,KAAKjC,MAAMG,gBAAgB,QACpCQ,EAAU,+BAA+B,aAI7C,OACE,qCAEA,cAAC3B,EAAD,CAAQK,MAAM,aAAaqC,UAAU,kBAAkBvC,KAAMA,EAAMM,WAAYA,IAC/E,cAACwB,EAAD,CAAOC,MAAOA,IACd,qBAAKhC,UAAU,iBAAf,SAME,cAACU,EAAD,CAAUe,UAAWA,EAAWT,QAAQ,mCAAmCf,KAAMA,EAAMM,WAAYA,UCvC1FyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,SAM1BZ,M","file":"static/js/main.6fe7156c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n              </li> */}\r\n            </ul>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <div className={`form-check form-switch my-2 text-${props.mode==='light'?'dark':'light'}`}> \r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set Title\",\r\n    aboutText: \"Set About\"\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\",\"success\");\r\n    }\r\n    const handleLowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\",\"success\");\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Cleared Text!\",\"danger\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"onchange\")\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"Enter Text Here\");\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container \" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode==='light'?'white':'black',color:props.mode==='light'?'black':'white'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"6\" />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleUpClick} >Convert To Uppercase</button>\r\n            <button type=\"submit\" className=\"btn btn-success mx-2\" onClick={handleLowClick} >Convert To Lowercase</button>\r\n            <button type=\"submit\" className=\"btn btn-danger mx-2\" onClick={handleClearClick} >Clear</button>\r\n        </div> \r\n        <div className=\"container my-4\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>Number of words-{text===''?0:text.split(\" \").length} Number of chars-{text.length}</p>\r\n            <p>{Math.floor(0.008 * text.split(\" \").length + 1) } minutes read</p>\r\n            <p>Preview</p>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        let string = word;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show mx-20`} role=\"alert\">\r\n            <p><strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}</p>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n \nlet name=\"Changezi\";\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    });\n    setTimeout(()=>{\n      setAlert(null);\n    },1500)\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='#343a40';\n      showAlert(\"Dark mode has been enabled!\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Dark mode has been disabled!\",\"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"Text Utils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert} />\n    <div className=\"container my-3\">\n      {/* <Routes>\n        <Route exact path=\"/about\" element={<About />}/>\n        <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter Your Text Below to analyze\" mode={mode} toggleMode={toggleMode} />} />\n      </Routes> */}\n\n      <TextForm showAlert={showAlert} heading=\"Enter Your Text Below to analyze\" mode={mode} toggleMode={toggleMode} />\n    </div>\n    {/* </Router> */}\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}